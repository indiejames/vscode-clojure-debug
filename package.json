{
  "name": "clojure-debug",
  "displayName": "Clojure Debug",
  "license": "MIT",
  "version": "0.1.0",
  "publisher": "jamesnorton",
  "description": "Clojure debugger / language support for VS Code.",
  "author": {
    "name": "James Norton"
  },
  "engines": {
    "vscode": "^1.1.x"
  },
  "icon": "images/clojure-logo.png",
  "categories": [
    "Debuggers"
  ],
  "private": true,
  "repository": {
    "type": "git",
    "url": "https://github.com/indiejames/vscode-clojure-debug.git"
  },
  "bugs": {
    "url": "https://github.com/indiejames/vscode-clojure-debug/issues"
  },
  "dependencies": {
    "vscode": "^0.11.x",
    "vscode-debugadapter": "^1.4.1",
    "vscode-debugprotocol": "^1.4.0",
    "jg-nrepl-client": "0.2.3",
    "vscode-languageclient": "^1.4.2",
    "vscode-languageserver": "^1.4.1",
    "jsedn": "0.3.5",
		"chalk": "^1.1.1"
  },
  "devDependencies": {
    "vscode": "^0.11.x",
    "mocha": "^2.4.5",
    "typescript": "^1.8.9",
    "typings": "^0.7.9"
  },
  "scripts": {
   "prepublish": "tsc -p ./src",
   "compile": "tsc -p ./src",
   "watch": "tsc -w -p ./src",
   "postinstall": "node ./node_modules/vscode/bin/install",
   "test": "node ./node_modules/mocha/bin/mocha -u tdd ./out/tests/"
  },
   "activationEvents": [
    "onDebug:clojure"
  ],
  "main": "./out/extension",
  "contributes": {
    "configuration": {
			"type": "object",
			"title": "Clojure configuration",
			"properties": {
				"clojure.languageServerExample.maxNumberOfProblems": {
					"type": "number",
					"default": 100,
					"description": "Controls the maximum number of problems produced by the server."
				},
        "clojure.refreshNamespacesBeforeRunnningAllTests": {
          "type": "boolean",
          "default": true,
          "description": "Whether or not to issue a refresh command before running all the tests in the workspace."
        },
        "clojure.refreshNamespacesBeforeRunnningTestNamespace": {
          "type": "boolean",
          "default": true,
          "description": "Whether or not to issue a refresh command before running all the tests in a namespace."
        },
        "clojure.refreshNamespacesBeforeRunnningTest": {
          "type": "boolean",
          "default": false,
          "description": "Whether or not to issue a refresh command before running a single test."
        }
			}
		},

    "commands": [
      {
        "command": "clojure.refresh",
        "title": "Clojure: Refresh Code",
        "description": "Refresh code without restarting the REPL."
      },
      {
        "command": "clojure.run-all-tests",
        "title": "Clojure: Run All Tests",
        "description": "Run all the tests in the project after refreshing the code."
      },
      {
        "command": "clojure.run-test-file",
        "title": "Clojure: Run Tests in Current Namespace",
        "description": "Run the tests in the current namespace, optionally refreshing code first."
      },
      {
        "command": "clojure.run-test",
        "title": "Clojure: Run Test Under Cursor",
        "description": "Run the test under the cursor, optionally refreshing code first."
      }],

    "debuggers": [
      {
        "type": "clojure",
        "label": "Clojure Debug",
        "enableBreakpointsFor": {
          "languageIds": [
            "clojure"
          ]
        },
        "program": "./out/clojureDebug.js",
        "runtime": "node",
        "configurationAttributes": {
          "launch": {
            "required": [
              "toolsJar",
              "cwd"
            ],
            "properties": {
              "toolsJar": {
                "type": "string",
                "description": "Path to the tools.jar in your Java installation.",
                "default": "${JAVA_HOME}/lib/tools.jar"
              },
              "replPort": {
                "type": "number",
                "description": "Port on which nREPL should listen.",
                "default": 5555
              },
              "debugPort": {
                "type": "number",
                "description": "Port on which the debugger should connect to the process to be debugged.",
                "default": 8030
              },
              "env": {
                "type": "object",
                "description": "Environment variables passed to the program.",
                "default": {}
              },
              "cwd": {
                "type": "string",
                "description": "Workspace relative or absolute path to the working directory of the program being debugged. Default is the current workspace.",
                "default": "${workspaceRoot}"
              },
              "stopOnEntry": {
                "type": "boolean",
                "description": "Automatically stops program on launch.",
                "default": false
              },
              "refreshOnLaunch": {
                "type": "boolean",
                "description": "Automatically loads all namespaces on launch.",
                "default": true
              }
            }
          }
        },
        "initialConfigurations": [
          {
            "name": "Clojure-Debug",
            "type": "clojure",
            "request": "launch",
            "toolsJar": "${JAVA_HOME}/lib/tools.jar",
            "env": {},
            "cwd": "${workspaceRoot}",
            "stopOnEntry": false,
            "refreshNamespacesOnLaunch": true
          }
        ]
      }
    ]
  }
}
